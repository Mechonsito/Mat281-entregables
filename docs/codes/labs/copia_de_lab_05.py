# -*- coding: utf-8 -*-
"""Copia de lab_05.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aLFPCjqFf_vvZq5tIBYLzQRce94yKcxB

<a href="https://colab.research.google.com/github/fralfaro/MAT281/blob/main/docs/labs/lab_05.ipynb" target="_parent"><img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"/></a>


# MAT281 - Laboratorio N¬∞05

**Objetivo**: Explorar y visualizar datos de Netflix usando **matplotlib** y **seaborn/plotly**, aprendiendo a elegir gr√°ficos adecuados para distintos tipos de variables y preguntas de an√°lisis.



**Dataset**:

Trabajaremos con el archivo `netflix_titles.csv`, que contiene informaci√≥n sobre los t√≠tulos disponibles en la plataforma Netflix hasta el a√±o 2021.

| Variable       | Clase     | Descripci√≥n                                                                 |
|----------------|-----------|------------------------------------------------------------------------------|
| show_id        | caracter  | Identificador √∫nico del t√≠tulo en el cat√°logo de Netflix.                   |
| type           | caracter  | Tipo de contenido: 'Movie' o 'TV Show'.                                     |
| title          | caracter  | T√≠tulo del contenido.                                                       |
| director       | caracter  | Nombre del director (puede ser nulo).                                       |
| cast           | caracter  | Lista de actores principales (puede ser nulo).                              |
| country        | caracter  | Pa√≠s o pa√≠ses donde se produjo el contenido.                                |
| date_added     | fecha     | Fecha en la que el t√≠tulo fue agregado al cat√°logo de Netflix.              |
| release_year   | entero    | A√±o de lanzamiento original del t√≠tulo.                                     |
| rating         | caracter  | Clasificaci√≥n por edad (por ejemplo: 'PG-13', 'TV-MA').                      |
| duration       | caracter  | Duraci√≥n del contenido (minutos o n√∫mero de temporadas para series).        |
| listed_in      | caracter  | Categor√≠as o g√©neros en los que est√° clasificado el contenido.              |
| description    | caracter  | Breve sinopsis del contenido.                                               |
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

sns.set_theme(style="whitegrid")

# Cargar datos
df = pd.read_csv('https://raw.githubusercontent.com/fralfaro/MAT281/main/docs/labs/data/netflix_titles.csv')
df.head()

"""## üìä Parte 1: Exploraci√≥n visual b√°sica

1. **Distribuci√≥n de tipos de contenido**

   * Realiza un gr√°fico de barras mostrando la cantidad de pel√≠culas vs series (`type`).
   * Pregunta gu√≠a: ¬øCu√°l es el tipo de contenido predominante en Netflix? ¬øQu√© implicancias podr√≠a tener para los usuarios?

2. **Histograma de a√±os de lanzamiento**

   * Muestra c√≥mo se distribuyen los t√≠tulos seg√∫n su `release_year`.
   * Pregunta gu√≠a: ¬øHay m√°s contenido reciente o antiguo? ¬øNotas alg√∫n patr√≥n en d√©cadas espec√≠ficas?

3. **Proporci√≥n de clasificaciones por edad (`rating`)**

   * Haz un gr√°fico circular o de barras.
   * Pregunta gu√≠a: ¬øQu√© clasificaci√≥n es m√°s com√∫n? ¬øCrees que Netflix est√° m√°s enfocado en p√∫blico adulto, familiar o infantil?


"""

peliculas = df['type'].value_counts()
plt.bar(peliculas.index, peliculas.values)
plt.xlabel('Tipo de contenido')
plt.ylabel('Cantidad')
plt.title('Distribuci√≥n de tipos de contenido')
plt.show()

#El contenido predominante son las peliculas, esto puede ser relevante para el usuario segun lom que busque

plt.hist(df['release_year'], bins=50)
plt.xlabel('A√±o de lanzamiento')
plt.ylabel('Cantidad de t√≠tulos')
plt.title('Distribuci√≥n de a√±os de lanzamiento')
plt.show()

#Hay muchisimo contenido mas reciente que antiguo, se puede ver una tendencia al alza entre los a√±os 2000 y 2020, especialmente desde 2010 en adelante que es donde estuvo el boom del internet y las plataformas de streaming

categorias = df['rating'].value_counts()

plt.pie(categorias.values, labels=categorias.index, autopct='%2.1f%%')
plt.title('Proporci√≥n de clasificaciones por edad')
plt.show()

plt.figure(figsize=(12, 6))
sns.barplot(x=categorias.index, y=categorias.values)
plt.xlabel('Clasificaci√≥n de edad')
plt.ylabel('Cantidad de t√≠tulos')
plt.title('Proporci√≥n de clasificaciones por edad')
plt.show()

#LA categoria mas comun es TV_MA y no se para que publico esta mas enfocado porque no se que es cada categoria XD

"""

## üé® Parte 2: Tendencias y evoluci√≥n en el tiempo

4. **N√∫mero de t√≠tulos agregados por a√±o**

   * Usa `date_added` (convertido a fecha) y grafica una serie temporal.
   * Pregunta gu√≠a: ¬øCu√°ndo creci√≥ m√°s el cat√°logo de Netflix? ¬øQu√© relaci√≥n podr√≠a tener con la expansi√≥n internacional de la plataforma?

5. **Heatmap de lanzamientos por a√±o y mes**

   * Construye un mapa de calor con `year_added` y `month_added`.
   * Pregunta gu√≠a: ¬øHay meses con m√°s estrenos que otros? ¬øQu√© conclusiones puedes sacar sobre la estacionalidad de lanzamientos?

6. **Duraci√≥n de pel√≠culas por g√©nero**

   * Extrae la duraci√≥n en minutos y crea un boxplot agrupado por g√©nero principal.
   * Pregunta gu√≠a: ¬øQu√© g√©neros suelen durar m√°s? ¬øQu√© podr√≠as decir sobre la variabilidad dentro de un mismo g√©nero?
"""

df['date_added'] = pd.to_datetime(df['date_added'], format="%B %d, %Y", errors='coerce')
df['year_added'] = df['date_added'].dt.year
df['month_added'] = df['date_added'].dt.month
titulospora√±o = df['year_added'].value_counts().sort_index().dropna()


plt.figure(figsize=(12, 6))
sns.lineplot(x=titulospora√±o.index, y=titulospora√±o.values)
plt.xlabel('A√±o de adici√≥n')
plt.ylabel('Cantidad de t√≠tulos agregados')
plt.title('N√∫mero de t√≠tulos agregados por a√±o')
plt.show()

#En el a√±o en que mas crecio fue en 2019, esto podria relacionarse directamente con la alta cantidad de usuarios que tenia la plataforma

plt.figure(figsize=(15, 8))
sns.heatmap(df.groupby(['month_added','year_added']).size().unstack(), cmap='Blues')
plt.show()

#Podria observarse una leve tendencia a que a lo largo de los a√±os hay mas estrenos en diciembre o tirando hacia fines de a√±o

duracion = df[df['type'] == 'Movie'][['duration', 'listed_in']].copy()
duracion['duration'] = duracion['duration'].str.extract('(\d+)').astype(float)
duracion.dropna(subset=['duration'], inplace=True)
duracion['duration'] = duracion['duration'].astype(int)

duracion['listed_in'] = duracion['listed_in'].str.split(', ')
duracion_exploded = duracion.explode('listed_in')

plt.figure(figsize=(10, 10))
sns.boxplot(x='duration', y='listed_in', data=duracion_exploded)
plt.ylabel('G√©nero principal')
plt.xlabel('Duraci√≥n (minutos)')
plt.title('Duraci√≥n de pel√≠culas por g√©nero')
plt.xticks(rotation=0)
plt.tight_layout()
plt.show()

#El promedio mas alto es el de classic movies, tambien puede observarse que los cuartiles estan bastante distanciados en comparacion a otras categorias, mas no es el que presenta mayor variabilidad

"""

## üî• Parte 3: Comparaciones y relaciones

7. **Top 10 pa√≠ses con m√°s producciones**

   * Usa un gr√°fico de barras para mostrar los pa√≠ses m√°s frecuentes en la columna `country`.
   * Pregunta gu√≠a: ¬øQu√© pa√≠ses dominan el cat√°logo? ¬øSorprende la distribuci√≥n o es esperada?

8. **Pel√≠culas vs Series seg√∫n g√©nero**

   * Realiza un gr√°fico de barras apiladas para mostrar la cantidad de t√≠tulos por g√©nero, separando `Movie` y `TV Show`.
   * Pregunta gu√≠a: ¬øExisten g√©neros m√°s asociados a pel√≠culas o a series?

9. **Relaci√≥n entre duraci√≥n y a√±o de lanzamiento**

   * Haz un gr√°fico de dispersi√≥n (scatterplot) con `release_year` en el eje X y `duration` (en minutos) en el eje Y.
   * Pregunta gu√≠a: ¬øHan cambiado los est√°ndares de duraci√≥n de las pel√≠culas con el tiempo? ¬øSe ven outliers interesantes?

"""

paises = df['country'].value_counts().head(10)
plt.figure(figsize=(12, 6))
sns.barplot(x=paises.index, y=paises.values)
plt.show()

#El pais predominante es Estados Unidos, la verda la distribucion no me sorprende considerando el tama√±o de la industria de estados unidos y el crecimiento de la industria india

df_generos = df.assign(listed_in=df['listed_in'].str.split(', ')).explode('listed_in')

generosportipo = df_generos.groupby(['listed_in', 'type']).size().reset_index(name='count')

plt.figure(figsize=(15, 8)) # Adjusted figure size
sns.barplot(x='listed_in', y='count', hue='type', data=generosportipo)
plt.ylabel('Cantidad')
plt.title('Pel√≠culas vs Series seg√∫n g√©nero')
plt.xticks(rotation=90)
plt.tight_layout()
plt.show()

#No se no logre hacer el grafico como los del profe :(

df_peliculas = df[df['type'] == 'Movie'].copy()

df_peliculas['duration_minutes'] = df_peliculas['duration'].str.extract('(\d+)').astype(float)
df_peliculas.dropna(subset=['duration_minutes'], inplace=True) # borra filas que no esten con la duracion en float
df_peliculas['duration_minutes'] = df_peliculas['duration_minutes'].astype(int)
plt.figure(figsize=(12, 8))
sns.scatterplot(x='release_year', y='duration_minutes', data=df_peliculas, s=10, alpha=0.6) #agregamos transparencia a los puntos para que sea mas notoria la acumulacion de puntos
plt.xlabel('A√±o de lanzamiento')
plt.ylabel('Duraci√≥n (minutos)')
plt.title('Relaci√≥n entre Duraci√≥n de Pel√≠culas y A√±o de Lanzamiento')
plt.show()

#pareciera ser que con el tiempo se ha ido haciendo mas contenido de menor duracion pero manteniendo el de larga duracion tambien

"""## ‚≠ê Desaf√≠o Final

* Encuentra las combinaciones m√°s frecuentes de **g√©nero + rating** y repres√©ntalas en un **heatmap o gr√°fico de burbujas**.
* Pregunta gu√≠a: ¬øQu√© g√©neros est√°n m√°s dirigidos a un p√∫blico adulto? ¬øY cu√°les a p√∫blico familiar o infantil?

# FIXME
"""

df_aaaaa=df_peliculas.groupby(['listed_in', 'rating']).size().reset_index(name='count')
df_aaaaa
plt.figure(figsize=(12, 25))
sns.heatmap(df_aaaaa.pivot(index='listed_in', columns='rating', values='count'), cmap='YlGnBu')
plt.show()

#vuelvo a repetir que no entiendo que significan las clasificaciones asi que no se :p